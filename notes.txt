- Framework to develop android and ios apps
- written in js and react js
- it will convert code to native apps
- initial release date 26th march 2015
- maintained by facebook

react js is a library and react native is a framework

npx react-native run-android - command to run the native project

jsx is just the javascript file with an additional feature writing html in the same file and jsx does not have any official full form but it is widely known as JavaScript XML or JavaScript Extension

we cannot make a function after we've written return statement in a function in js and react js

Components are reusable UI elements in react js and react native and they are the building blocks of the app 

Components are similar as function but in function we cannot create html elements but in components we can create html elements and we can also use state and props in components
two types of components - functional and class based but class based not really used nowadays
we mainly use functional components nowadays

State is a feature of react js which holds the information inside the components

Whenever we update the state then the component rerenders while in variables change, the component does not re render.

A state cannot be used outside the component
we can never share the data of a state but for the prop we can

With the help of props we can share the data from one component to another component
aka arguments parameter 
We can also pass the data from child to parent component using props

Flatlist - To create or use lists in React native we use Flatlist and it can be an array or an array of objects as well
Flatlist always use two paramets that is data and renderitem

We can pass mutliple props in components

Map function is used to create custom list 

Section list - We can only use data key as the second array in the nested condition and not anything else for now according to the official documentation.


********************
default code

import React from "react";
import {View, Text, Button, StyleSheet} from "react-native"

const App = () => {
  return(
    <View style={styles.main}>
    </View>
  )
}

const styles = StyleSheet.create({
  main:{
    flex:1,
  }
})

export default App;


**********************


Any framework of JS cannot directly connect to the database, so we integrate the API to connect the database

Redux Installation - 
npm i redux
npm i react-redux
npm i @reduxjs/toolkit
